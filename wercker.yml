# Copyright 2017, Oracle Corporation and/or affiliates.  All rights reserved.

# This is a sample that demonstrates how to use the Java Flight Recorder 
# Wercker step. 
#

box: 
  id: anapsix/alpine-java:8u201b09_jdk

# this pipeline does not really do anything, it just acts as a fan-out point to run all of test/demo pipelines
build:
  steps:
    - script:
      name: Build
      code: |
        echo "Hello Java Flight Recorder!"
        echo "Choose the pipeline you want to run, e.g. 'test-timeout' and run it like this:"
        echo "wercker build --pipeline=test-timeout"
        
    # https://github.com/wercker/step-gradle
    - java/gradle:
      task: build
      cache_project_cache: true
      
    - script:
      code: |
        ls -al
        ls /pipeline/source/build/libs

regular-test:
  steps:
    - markxnelson/java-flight-recorder:
      application: com.oracle.sample.SampleApplication
      classpath: /pipeline/source/build/libs/sample-jfr-step.jar
      filename: myrecording.jfr
      experimental: true
      duration: 4m
      delay: 30s
 
test-timeout:
  steps:
    - markxnelson/java-flight-recorder:
      timeout: 2m
      application: com.oracle.sample.SampleApplication
      classpath: /pipeline/source/build/libs/sample-jfr-step.jar
      filename: myrecording.jfr
      experimental: true
      duration: 4m
      delay: 30s 
      maxsize: 10M
      maxage: 1h
